#!/usr/bin/python2

import os
import sys
import argparse

import rospy

import cv
import cv_bridge

from sensor_msgs.msg import (
    Image,
)
from std_msgs.msg import (
    UInt16,
)

def getImageFromCamera(msg):
    pub = rospy.Publisher('/robot/xdisplay', Image, latch=True)
    pub.publish(msg)

def stream_to_display(camera_topic):
    sub = rospy.Subscriber(camera_topic, Image, getImageFromCamera)
    rate = rospy.Rate(100)
    print("Displaying. Press Ctrl-C to stop...")
    while not rospy.is_shutdown():
        rate.sleep()


def main():
    """Camera  Display

    Passes the ROS Image Messages from CAMERA to Display
    """

    arg_fmt = argparse.RawDescriptionHelpFormatter
    parser = argparse.ArgumentParser(formatter_class=arg_fmt,
                                     description=main.__doc__)

    parser.add_argument(
        '-c', '--camera', choices=['left', 'right', 'head'], required=True,
        help="the camera to display"
    )

    args = parser.parse_args(rospy.myargv()[1:])

    rospy.init_node('camera_to_display', anonymous=True)

    camera_topic = '/cameras/left_hand_camera/image'
    if(args.camera == 'right'):
    	camera_topic = '/cameras/right_hand_camera/image'
    if(args.camera == 'head'):
    	camera_topic = '/cameras/head_camera/image'
    stream_to_display(camera_topic)

    print("Closed.")

    return 0

if __name__ == '__main__':
    sys.exit(main())

